{
    "contents" : "library(\"coda\")\nlibrary(rjson)\ndir_list = c(\"01KEN_CXR_AGE_0\",\"01KEN_CXR_AGE_1\",\"02GAM_CXR_AGE_0\",\"02GAM_CXR_AGE_1\",\n             \"03MAL_CXR_AGE_0\",\"03MAL_CXR_AGE_1\",\"04ZAM_CXR_AGE_0\",\"04ZAM_CXR_AGE_1\",\n             \"05SAF_CXR_AGE_0\",\"05SAF_CXR_AGE_1\",\"06THA_CXR_AGE_0\",\"06THA_CXR_AGE_1\",\n             \"07BAN_CXR_AGE_0\",\"07BAN_CXR_AGE_1\")\ndir_list1 = substr(dir_list,3,15)\ndir_list2 = substr(dir_list,1,5)\njson.prep = list()\nfor (j in seq_along(dir_list)) {\n  DIR_NPLCM = paste0(\"C:\\\\Users\\\\WFu\\\\Dropbox (PERCH)\\\\PQM EXPERIMENT DATASETS\\\\ARCHIVE\\\\PQM_RESULTS_20141122\\\\\",dir_list2[j],\"\\\\\",dir_list[j])\n  \n  model_options  <- dget(paste(DIR_NPLCM,\"model_options.txt\",sep=\"/\"))\n  res_nplcm <- read.coda(paste(DIR_NPLCM,\"coda1.txt\",sep=\"/\"),\n                         paste(DIR_NPLCM,\"codaIndex.txt\",sep=\"/\"),quiet=TRUE)\n  bugs.dat <- dget(paste(DIR_NPLCM,\"data.txt\",sep=\"/\"))\n  Nd = bugs.dat$Nd\n  # prepare results for individual diagnosis:\n  d1_nplcm  = nrow(res_nplcm)\n  d2_nplcm  = Nd\n  Icat_nplcm = array(NA,c(d1_nplcm,d2_nplcm))\n  for (i in 1:d2_nplcm){\n    SubVarName = paste(\"Icat\",\"[\",i,\"]\",sep=\"\")\n    Icat_nplcm[,i] = res_nplcm[,SubVarName]\n  }\n  rev(strsplit(DIR_NPLCM,\"[\\\\]\")[[1]])[1]\n  \n  #\n  pathogen_list = c(model_options$pathogen_list,model_options$pathogen_SSonly_list)\n  # Prepare individual diagnosis table\n  path.prop.iter = apply(Icat_nplcm, 1, function(x) prop.table(table(x)))\n  freqs.list <- mapply(data.frame,Words=seq_along(path.prop.iter),path.prop.iter,\n                       SIMPLIFY=FALSE,MoreArgs=list(stringsAsFactors=FALSE))\n  freqs.df <- do.call(rbind,freqs.list)\n  res <- reshape(freqs.df,timevar=\"Words\",idvar=\"x\",direction=\"wide\")\n  x.levels = (as.numeric(levels(res$x)))\n  row.names(res)=sapply(x.levels,function(x) pathogen_list[x])\n  res.sort=res[order(as.numeric(levels(res$x))),]\n  res.ggplots = data.frame(t(data.matrix(res.sort)[,-1]))\n  res.ggplots[is.na(res.ggplots)] <- 0\n  res.ggplots <-round(res.ggplots,4)\n  # merge with pathogen_list and make sure every pathogen get a column\n  if (ncol(res.ggplots)<length(pathogen_list)){\n    path.df = as.data.frame(t(array(0,length(pathogen_list[[i]]))))\n    colnames(path.df)=pathogen_list[[i]]\n    res.ggplots = rbind.fill(path.df,res.ggplots)[-1,]\n  }\n  json.prep[[j]] <- as.array(colMeans(res.ggplots))\n  row.names(json.prep[[j]])=NULL\n  \n}\n\n\n# a function to match each model's result to the desired order:\nDIR_pathogen_displayorder_lookup <- \"C:\\\\PQ_MODEL\\\\pathogen_displayorder_lookup.csv\"\npathogen_displayorder_lookup <- read.csv(DIR_pathogen_displayorder_lookup)\nf <- pathogen_displayorder_lookup$Pathogen\ndisplay_order <- as.character(levels(f))[f]\nlookup <- function(disp_order, union_nm){\n  ord_union <- rep(NA,length(union_nm))\n  incre <- 0\n  for (j in seq_along(disp_order)){\n    if (disp_order[j]%in% union_nm){\n      incre <- incre + 1\n      ord_union[incre] <- which(union_nm==disp_order[j])\n    }\n  }\n  list(ord_union,union_nm[ord_union])\n}\n\n#   disp_order <- c(\"B\",\"E\",\"D\",\"C\",\"F\",\"A\")\n#   union_nm   <- c(\"A\",\"B\",\"C\",\"D\",\"E\")\n#   nm_list <-list(c(\"C\",\"E\"),\n#                  c(\"D\",\"B\"),\n#                  c(\"C\",\"A\",\"E\"))\n#   lookup(disp_order,union_nm,nm_list)\norder <- lookup(display_order,pathogen_list)[[1]]\nnewlist = lookup(display_order,pathogen_list)[[2]]\norder_new = 33-lookup(pathogen_list,newlist)[[1]]\n\n###\nn=length(dir_list)\njson.prep[[n+1]] = pathogen_list\njson.prep[[n+2]] = pathogen_list\njson.prep[[n+3]] = order_new\njson.prep[[n+4]] = dir_list1\ndir_list1[n+1]= \"pathogen\"\ndir_list1[n+2]= \"abbrev\"\ndir_list1[n+3]= \"rank\"\ndir_list1[[n+4]] = \"rawlist\"\nnames(json.prep)= dir_list1\nrequest.body <- toJSON(json.prep)\nsink(\"C:\\\\Users\\\\WFu\\\\Google Drive\\\\PERCH\\\\2_PQ_MODEL\\\\PQM_Project\\\\EtioComp\\\\perchdata.json\")\ncat(request.body)\nsink()\n\n\n\n\n",
    "created" : 1421993484832.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4260907045",
    "id" : "4D870F14",
    "lastKnownWriteTime" : 1421995624,
    "path" : "C:/Users/WFu/Google Drive/PERCH/2_PQ_MODEL/PQM_Project/EtioComp/dataprep.R",
    "project_path" : "dataprep.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}